use core::ptr::null_mut;
use crate::multiboot::ctypes::c_void;
pub use generated::*;

/// Stolen from ::std
#[allow(warnings)]
mod ctypes {
    pub use core::ffi::c_void;
    pub type c_char = i8;
    pub type c_schar = i8;
    pub type c_uchar = u8;
    pub type c_short = i16;
    pub type c_ushort = u16;
    pub type c_int = i32;
    pub type c_uint = u32;
    pub type c_long = i64;
    pub type c_ulong = u64;
    pub type c_longlong = i64;
    pub type c_ulonglong = u64;
    pub type c_float = f32;
    pub type c_double = f64;
}

/// Autogenerated from multiboot.h
#[allow(warnings)]
mod generated;

pub fn parse(magic: u32, multiboot: *mut c_void) -> Result<*mut multiboot_info, &'static str> {
    match (magic, multiboot) {
        (magic, _) if magic != MULTIBOOT_BOOTLOADER_MAGIC => Err("missing multiboot magic"),
        (_, ptr) if ptr.is_null() => Err("null pointer to multiboot info"),
        (_, multiboot) => Ok(multiboot as *mut multiboot_info),
    }
}
